@using Panel.Data
<div class="top-row px-4 test-@alertColor">
    <div>
        Уровень тревоги:  <b>@AlertDaemon.CurrentCounter</b>(@AlertDaemon.CurrentAlertState.Info)
    </div>
    <div>
        <button @onclick=DecreaseCurrentCounterValue>Уменьшить УТ</button>
        <input @bind=ChangeCount type="number" />
        <button @onclick=IncreaseCurrentCounterValue>Увеличить УТ</button>

    </div>
    <div class="color-pick">
        <button @onclick=ToggleSummary type="reset">@AlertDaemon.CurrentAlertState.Name</button>
        @if (ShowSummary)
        {
            <select @bind="SelectedId">
                @foreach (var summary in AlertDaemon.Summaries)
                {
                    <option value="@summary.Id">@summary.Name</option>
                }
            </select>
            <button @onclick=ApplyNewAlertState>Применить</button>
        }
    </div>


</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await AlertDaemon.RefreshSummariesAsync();
        SelectedId = AlertDaemon.CurrentAlertState.Id;
    }

    [Inject]
    private SkabenAlertDaemon? _alertDaemon { get; set; }

    private SkabenAlertDaemon AlertDaemon
    {
        get
        {
            if (_alertDaemon == null) throw new Exception("No alert daemon");
            return _alertDaemon;
        }
    }

    private string alertColor => AlertDaemon.CurrentAlertState.Name;
    private bool ShowSummary = false;
    private int ChangeCount { get; set; } = 10;
    private int SelectedId { get; set; } = 0;

    void ToggleSummary()
    {
        ShowSummary = !ShowSummary;
        SelectedId = AlertDaemon.CurrentAlertState.Id;
    }

    async Task DecreaseCurrentCounterValue()
    {
        await AlertDaemon.DecreaseCurrentCounterValueAsync(ChangeCount);
    }

    async Task IncreaseCurrentCounterValue()
    {
        await AlertDaemon.IncreaseCurrentCounterValueAsync(ChangeCount);
    }

    async Task ApplyNewAlertState()
    {
        if (await AlertDaemon.PostAlertAsync(SelectedId))
        {
            ShowSummary = false;
            SelectedId = 0;
        }
        else
        {
            //TODO modal component
        }

    }
}

